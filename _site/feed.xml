<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HioU - 海鸥</title>
    <description>海鸥（HioU）的博客,前端开发,web,haiouyun
</description>
    <link>http://haiouyun.com/</link>
    <atom:link href="http://haiouyun.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 25 Jul 2016 17:21:30 +0800</pubDate>
    <lastBuildDate>Mon, 25 Jul 2016 17:21:30 +0800</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>跟着时代的步伐加入React</title>
        <description>&lt;p&gt;为什么我要选择React作为我的第一个框架呢？其实真正的原因只有一个容易上手啦，不像Angular那样学习线路陡峭，而且目前国内的React发展也是相当迅速，后来有居上之势。&lt;/p&gt;

&lt;p&gt;另外为了增强用户体验，SPA（single page web application,单页面开发）也是相当的火热，而如今react短小精干的架势个人觉得完全符合SPA开发，当然看各位大神对React的见解，要让React能在SPA中游刃有余还需要一个搞定前后端的伴侣，这里我依照先人们的足迹，选择的meteor。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;meteor是基于node的开发框架&lt;/code&gt;，关键数据的实时交互这点和SPA的要求是完全符合，SPA要的就是无刷新数据交互嘛。&lt;/p&gt;

&lt;p&gt;今天就先说一下如何安装meteor吧，MAC安装这个就很容易了，windows要麻烦一点，我说一下windows吧。 进入&lt;a href=&quot;https://www.meteor.com/install&quot;&gt;下载页面&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;选择windows下载安装即可，这个下载速度嘛当然是有点虐心的，大家可以在下载阶段干点别的啥，&lt;/p&gt;

&lt;p&gt;安装完成后，我们来生成一个项目页面，进入后台CMD&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;指定一个你需要创建的文件夹路径&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;meteor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xxxxx&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;项目名字&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;完成后等文件加载完毕，该项目就建立好了，然后进入该项目&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xxxxx&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;meteor&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这里就跟操作Jekylls server命令是一样的，会告诉你一个页面在本地服务器已经启动了，你可以打开看看一般是http://localhost:3000/&lt;/p&gt;

&lt;p&gt;接着我们就需要你准备好Node.js，将通过npm来安装react。&lt;/p&gt;

</description>
        <pubDate>Sun, 24 Jul 2016 00:00:00 +0800</pubDate>
        <link>http://haiouyun.com/2016/07/24/meteor-react</link>
        <guid isPermaLink="true">http://haiouyun.com/2016/07/24/meteor-react</guid>
        
        
        <category>React</category>
        
      </item>
    
      <item>
        <title>本站常用模块介绍</title>
        <description>&lt;p&gt;主要介绍本博客页面中几个常用的组件使用，这里做一个简要记录也是备忘，另外也是方便后面代码阅读，暂且算是一个API介绍吧。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;注意都需要依赖jQuery库实现&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;滚动条动画 scroll_animate()&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;该组件主要是实现滚动条动画，主要用在页面导航和返回顶部按钮等这样类似的操作。参数说明：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;scroll_animate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;目标值&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;必须&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;毫米值&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/步长
	type : string 
	/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;运动的速度&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;normal&#39;&#39;slow&#39;&#39;fast&#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;鼠标移入移出标题动画显示 hover_animate()&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;该组件主要是实现鼠标移入和移出时动画显示，主要用在图片列表中的描述显示隐藏。参数说明：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;hover_animate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;parent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;选择器，包含动画元素的父级元素&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;必须&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;eventTarget&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;动画触发元素&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;：&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;需要一直显示的元素&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;动画时长&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;运动方向&lt;/span&gt;
	&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;toTop&#39;&#39;toBottom&#39;&#39;toLeft&#39;&#39;toRight&#39;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;默认是&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;toTop&#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;该组件用于我的项目展示页面中，当鼠标移入时显示项目具体描述，移出就隐藏描述，其动画底层是由CSS3实现，有助于浏览器的页面渲染。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;底部菜单按钮模块 render_bottom _bar()&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;主要用于按实际要求渲染底部按钮，该模块默认会生成一个底部按钮，即不输入任何参数便会生成一个底部按钮。参数说明：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;render_bottom&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;
	&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;需要生成菜单的数量&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;
	&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;菜单添加类名可以是单个也可以是个数组，当&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;为数组时&lt;/span&gt;
	&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;如果数组小于菜单数量，那么以最后一个&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;分配到多于的菜单数量&lt;/span&gt;
	&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;如果数组大于菜单数量，那么多出来的&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;无效，不会加入&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;
	&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;生成菜单中的&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;内容，与&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;处理方式一样&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;为了使页面流畅建议该模块一次性注入,代码结构原理生成节点后加入CSS样式最后一次性注入到body中，加速页面的渲染。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;页面导航数据的注入 updata_side _bar()&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;主要是根据一个标准布局来实现自动生成侧边栏的导航类容。参数说明：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;这里说的标准布局是指，页面类容是明显的分成A\B\C\D结构，同时拥有相同的类名，即使用了一套CSS样式来布局，其次每个小节中有一个标题标签，本博客中使用的H3标签作为标准，每个小节为一个LI标签，同时li标签都有包含一个相同的class&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;updata_side&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;targetEle&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;targetEle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;表示要获取数据的目标，这里是指包含所有小节的父元素&lt;/span&gt;
&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;侧边栏的标题（&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xxx&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;页面导航栏、&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xxx&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;清单）&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;说完啦！
目前我的博客已经完成基本的开发工作，主要是手机端调试，手机端触摸事件还有些BUG。&lt;/p&gt;
</description>
        <pubDate>Fri, 22 Jul 2016 00:00:00 +0800</pubDate>
        <link>http://haiouyun.com/2016/07/22/blog-node</link>
        <guid isPermaLink="true">http://haiouyun.com/2016/07/22/blog-node</guid>
        
        
        <category>博客搭建记录</category>
        
      </item>
    
      <item>
        <title>关于jeykll部署到github时资源获取出错</title>
        <description>&lt;p&gt;将网页部署到github时，会出现一个问题，就是所有的访问资源链接失效，这个很奇怪，因为在在本地测试时网页资源获取是没有问题的，究竟是哪里的问题呢?&lt;/p&gt;

&lt;p&gt;看了后台返回的提示信息显示的是在某某路径下得不到这个文件，很显然就是获取资源路径出现了问题，一开始以为是文件地址输入错误，检测一次后确定无误，再次细读错误提示信息，原来发现一个重要的问题，如果你是把博客发布到 &lt;code class=&quot;highlighter-rouge&quot;&gt;github-pages&lt;/code&gt; 上时，文件引入地址得这样写：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;err&quot;&gt;如果你的项目名字为：&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;那么引入地址为：&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xxxx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;css&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;即【你的项目】&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;文件夹&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;文件名&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;注意：如果是将 &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll&lt;/code&gt; 部署到你个人的域名下（包括域名解析到github-pages）就不需要上面这样的操作，直接上传到github上就可以，所以&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll&lt;/code&gt;在博客搭建上是非常容易的。&lt;/p&gt;

&lt;p&gt;建议：最好将整个博客静态页面全部搭建完毕，包括交互代码，在一个较完整的页面完成后再移植到 &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll&lt;/code&gt; 上面，这样更方便你前期不断的调试。当然就目前而言，我的博客就是完成了基本交互和架构后再通过 ` jeykll` 生成，还有就是使用sublime来编写markdown实在不咋样，很容易出错，目前还没有解决方案。只能暂时凑合。&lt;/p&gt;

&lt;p&gt;其次是 &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll&lt;/code&gt; 还没办法实现自由度较高的分页效果，想要实现类似瀑布流效果来实现文章列表加载。
目前需要实现的是在侧边栏中点击链接后不刷新，实现文章的读取。&lt;/p&gt;
</description>
        <pubDate>Fri, 15 Jul 2016 00:00:00 +0800</pubDate>
        <link>http://haiouyun.com/2016/07/15/blog-how</link>
        <guid isPermaLink="true">http://haiouyun.com/2016/07/15/blog-how</guid>
        
        
        <category>博客搭建记录</category>
        
      </item>
    
      <item>
        <title>搭建jekyll环境</title>
        <description>&lt;p&gt;3月就想通过&lt;code class=&quot;highlighter-rouge&quot;&gt;Github&lt;/code&gt;来搭建一个自己的博客，但由于一直都在忙于学习，所以就耽搁到现在。我说说我使用的博客系统吧，&lt;code class=&quot;highlighter-rouge&quot;&gt;github&lt;/code&gt;由于只能生成静态页面（没有数据交互），所以就需要借助一个能帮你处理博客内容的框架。&lt;/p&gt;

&lt;p&gt;当然一开始自己也觉得没有必要借助第三方框架，自己全部通过&lt;code class=&quot;highlighter-rouge&quot;&gt;JS&lt;/code&gt;来实现，但在实际操作中会遇到一系列问题，首当其冲的就是你发现需要模板来构建你的页面，因为你不希望被重复的页面架构和文件引用路径被折磨和浪费时间。
其次就是如何管理文章页面，尤其是在数量较大的情况，你不能再通过人工的生产文章页面，你需要一个自动的文章生成框架。当然这个可以通过&lt;code class=&quot;highlighter-rouge&quot;&gt;JS&lt;/code&gt;实现，但&lt;code class=&quot;highlighter-rouge&quot;&gt;JS&lt;/code&gt;很难实现数据的储存和异步读取（换句话讲就是这是一个很具有挑战的工程）。&lt;/p&gt;

&lt;p&gt;介于以上2点和自己的能力最好就是选择博客框架来实现，我选择的是&lt;code class=&quot;highlighter-rouge&quot;&gt;jeykll&lt;/code&gt;，原因在于学习成本较低，而且有很好的模板架构，在你搭建好静态系统后就能很简单的移植到&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll&lt;/code&gt;上面。&lt;/p&gt;

&lt;p&gt;我使用的是windows环境搭建，在windows环境搭建&lt;code class=&quot;highlighter-rouge&quot;&gt;jeykll&lt;/code&gt;其实也是很简单的，需要&lt;code class=&quot;highlighter-rouge&quot;&gt;Ruby&lt;/code&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;python&lt;/code&gt;,这两个文件都可以在官网下载windows安装文件。安装完后打开控制台查看是否安装成功：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;	&lt;span class=&quot;o&quot;&gt;----&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;python&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;版本号&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;----&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;版本号&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;如果出现内部命令错误的提示，原因是环境变量中没有加入&lt;code class=&quot;highlighter-rouge&quot;&gt;Ruby&lt;/code&gt;或&lt;code class=&quot;highlighter-rouge&quot;&gt;python&lt;/code&gt;，只需要将安装路径写入环境变量中即可，&lt;code class=&quot;highlighter-rouge&quot;&gt;python&lt;/code&gt;在该安装版本中已经加入安装了&lt;code class=&quot;highlighter-rouge&quot;&gt;easy_install&lt;/code&gt;,需要注意的是也需要将&lt;code class=&quot;highlighter-rouge&quot;&gt;easy_install&lt;/code&gt;加入环境变量中，方法是&lt;code class=&quot;highlighter-rouge&quot;&gt;找到python安装文件夹内scripts文件夹，将该文件夹路径加入到变量中即可&lt;/code&gt;，需要注意的是一定要注意大小写。&lt;/p&gt;

&lt;p&gt;安装完上面的东西后，就可以安装&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll&lt;/code&gt;了，输入&lt;code class=&quot;highlighter-rouge&quot;&gt;gem install jekyll&lt;/code&gt;即可。只要上面的环境安装好后，这里就没有任何问题，但需要注意的是这个安装过程比较慢，可能会出现超时无回应的情况，只要再次执行该命令即可。&lt;/p&gt;

&lt;p&gt;安装完后就可以建一个博客项目了，通过控制台进入一个你指定的目录，使用&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll new 博客名&lt;/code&gt;就可以创建一个博客名文件夹，里面已经初始化了整个博客框架，可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll server&lt;/code&gt;在网页上运行这个博客，注意使用这个命令一定进入&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll&lt;/code&gt;创建的文件夹内。&lt;/p&gt;

&lt;p&gt;接着就是阅读&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll&lt;/code&gt;使用文档，这里给大家推荐一个中文地址—&lt;a href=&quot;http://jekyll.bootcss.com/&quot;&gt;jekyll-简单的博客&lt;/a&gt;,
同时也推荐一个技术博客，会让你很容易上手&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll&lt;/code&gt;&lt;a href=&quot;http://www.pchou.info/&quot;&gt;http://www.pchou.info/&lt;/a&gt;，该博客也是通过&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll&lt;/code&gt;来搭建的.&lt;/p&gt;

</description>
        <pubDate>Mon, 04 Jul 2016 23:16:33 +0800</pubDate>
        <link>http://haiouyun.com/2016/07/04/welcome-to-jekyll</link>
        <guid isPermaLink="true">http://haiouyun.com/2016/07/04/welcome-to-jekyll</guid>
        
        
        <category>博客搭建记录</category>
        
      </item>
    
  </channel>
</rss>
