---
layout: post
title:  "Mongoose对MongoDB的简单应用"
categories: Node与MongoDB
---

如果看了上篇MongoDB的简单使用，并亲自实践后，你会发现自己对MongoDB还是非常喜爱的，那么在Node.js中究竟是如何连接、操作的呢？那就来看看Node开发中目前（2016-8）必不可少的模块Mongoose。

Mongoose的使用非常友好的，基本符合MongoDB的指令操作习惯，所以学习起来没有那么多的阻碍，当然目前要想深入了解Mongoose的使用，建议大家还是去看[官方的使用文档](http://www.nodeclass.com/api/mongoose.html),说实话API使用文档对英语要求并不高，只是很多开发人员一看见全是英文便不想再深入看下去，而且国内一些基础教程对API的使用讲解的并不完全，这里我建议大家去看官方文档。

希望这篇文章可以让你对Mongoose是如何与数据库连接操作有个基本了解。满足刚开始接触Node开发的朋友，能顺利的搭建数据库开发环境的要求。

***
**1.准备开发环境**
  
【需要安装Node环境】  

创建一个文件夹，我这里就直接以mongoose来命名的文件夹，这里我使用的是Sublime编辑器，通过Sublime打开文件夹。

然后打开后台进入该文件夹，安装Mongoose模块  

`npm install mongoose`安装成功后应该是这样的：

![img](https://raw.githubusercontent.com/jacecao/gif-img/master/mongoose/mongoose1.png)

![img](https://raw.githubusercontent.com/jacecao/gif-img/master/mongoose/mongoose2.png)

**2.开始创建连接数据库文件**

创建`model.js`文件完成数据库配置工作

![img](https://raw.githubusercontent.com/jacecao/gif-img/master/mongoose/mongoose3.png)

现在就完成了整个mongoose的部署

`mongoose.model('People',MovieSchema)`中的People就会在创建数据库中以该名字为基础命名一个`peoples`的数据集。

**3.开始向数据库写入数据**

创建`insert.js`文件，该文件主要实现的功能就是写入数据

![img](https://raw.githubusercontent.com/jacecao/gif-img/master/mongoose/mongoose5.png)

在执行该文件之前，我们来看看我们的数据库是什么情况

![img](https://raw.githubusercontent.com/jacecao/gif-img/master/mongoose/mongoose4.png)

现在我们通过后台来执行这个`insert.js`，看看有什么奇迹发生

![img](https://raw.githubusercontent.com/jacecao/gif-img/master/mongoose/mongoose6.png)

执行文件后再查看数据库

![img](https://raw.githubusercontent.com/jacecao/gif-img/master/mongoose/mongoose7.jpg)


怎么样是不是觉得MongoDB没有mysql中的那么多要求

再看我们究竟是不是将数据写入了呢

![img](https://raw.githubusercontent.com/jacecao/gif-img/master/mongoose/mongoose8.png)


**4.查找数据**

创建`find.js`文件,该文件主要实现数据查找

![img](https://raw.githubusercontent.com/jacecao/gif-img/master/mongoose/mongoose10.png)

在运行该文件之前，我们多次执行`insert.js`文件来增加数据（insert.js中的数据大家可以改变一下），每次执行后需要使用`ctrl+c`来退出数据操作

![img](https://raw.githubusercontent.com/jacecao/gif-img/master/mongoose/mongoose11.png)

执行find.js文件

![img](https://raw.githubusercontent.com/jacecao/gif-img/master/mongoose/mongoose12.png)

接着我们再创建一个`findOne.js`实现单个查找

![img](https://raw.githubusercontent.com/jacecao/gif-img/master/mongoose/mongoose13.png)

执行findOne

![img](https://raw.githubusercontent.com/jacecao/gif-img/master/mongoose/mongoose14.png)

这里是对第一个满足条件的数据进行操作

**4.删除数据**

创建`remove.js`文件,该文件主要实现数据删除

该文件我罗列了常见的集中删除方法（单条和多个删除）

![img](https://raw.githubusercontent.com/jacecao/gif-img/master/mongoose/mongoose15-1.png)

![img](https://raw.githubusercontent.com/jacecao/gif-img/master/mongoose/mongoose15-2.png)

**5.或查找**

这个是为了实现对多个条件进行查找，创建`condition.js`文件

![img](https://raw.githubusercontent.com/jacecao/gif-img/master/mongoose/mongoose16.png)

执行文件之前，我们通过对`insert.js`的修改再追加几条数据，目前数据是这样的:

![img](https://raw.githubusercontent.com/jacecao/gif-img/master/mongoose/mongoose17.png)

执行文件后，我们看能不能把满足`{'username': 'hiou'}`或`{'age': 27}`的所有数据查找出来

![img](https://raw.githubusercontent.com/jacecao/gif-img/master/mongoose/mongoose18.png)

看来正确找到所有满足条件的数据，注意这里是或的关系，并不是要求所有条件都得满足。

好啦，这就是对mongoose的简单使用。

